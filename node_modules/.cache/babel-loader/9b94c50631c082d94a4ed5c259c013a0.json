{"ast":null,"code":"var _jsxFileName = \"/home/hayabusa/Documents/WebDevelopment/Modern_React_Redux/router-bootstrap-tutorial/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport About from \"./Components/About\";\nimport Contact from \"./Components/Contact\";\nimport NoMatch from \"./Components/NoMatch\";\nimport './App.css'; // `React.Fragment` can be used in place of `div` for component wrapper\n// Set Up a `Router` with a `Switch` element to select `Route` paths to change between rendered components or page content.\n// Paths and Components are relative and can be named anything. The `NoMatch` component is in place without a path as a catch for any path not connected to a component.\n\nfunction App() {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/About\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Contact\",\n    component: Contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    component: NoMatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hayabusa/Documents/WebDevelopment/Modern_React_Redux/router-bootstrap-tutorial/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Home","About","Contact","NoMatch","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP,C,CAEE;AAEA;AAEA;;AAEF,SAASC,GAAT,GAAe;AACb,SAEE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAGJ,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAGC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAGC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAGC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CAFF;AAaD;;AAED,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport About from \"./Components/About\";\nimport Contact from \"./Components/Contact\";\nimport NoMatch from \"./Components/NoMatch\";\nimport './App.css';\n\n  // `React.Fragment` can be used in place of `div` for component wrapper\n\n  // Set Up a `Router` with a `Switch` element to select `Route` paths to change between rendered components or page content.\n\n  // Paths and Components are relative and can be named anything. The `NoMatch` component is in place without a path as a catch for any path not connected to a component.\n\nfunction App() {\n  return (\n\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/About\" component={ About } />\n          <Route path=\"/Contact\" component={ Contact } />\n          <Route component={ NoMatch } />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}